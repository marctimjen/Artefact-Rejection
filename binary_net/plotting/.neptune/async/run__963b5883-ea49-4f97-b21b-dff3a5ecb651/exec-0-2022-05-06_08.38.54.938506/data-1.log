{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu"], "min": 0.0, "max": 100.0, "unit": "%"}, "version": 1}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu"]}, "version": 2}
{"obj": {"type": "ConfigFloatSeries", "path": ["monitoring", "gpu_memory"], "min": 0.0, "max": 4.0, "unit": "GB"}, "version": 3}
{"obj": {"type": "ClearFloatLog", "path": ["monitoring", "gpu_memory"]}, "version": 4}
{"obj": {"type": "LogFloats", "path": ["monitoring", "cpu"], "values": [{"value": 4.8, "step": null, "ts": 1651819135.0724347}]}, "version": 5}
{"obj": {"type": "LogFloats", "path": ["monitoring", "memory"], "values": [{"value": 8.079727172851562, "step": null, "ts": 1651819135.0724347}]}, "version": 6}
{"obj": {"type": "LogFloats", "path": ["monitoring", "gpu_memory"], "values": [{"value": 0.964019775390625, "step": null, "ts": 1651819135.0724347}]}, "version": 7}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "An uncaught exception occurred while run was active on worker DESKTOP-SDMAFDQ.", "step": null, "ts": 1651819136.2322474}, {"value": "Marking run as failed", "step": null, "ts": 1651819136.2322474}, {"value": "Traceback:", "step": null, "ts": 1651819136.2322474}, {"value": "  File \"C:\\Users\\Marc\\Documents\\GitHub\\Artefact-Rejection\\plotting\\max_learnplotter.py\", line 25, in <module>\n    sgd_tp = run['network_SGD/matrix/val_tp_pr_file'].fetch_values()\n", "step": null, "ts": 1651819136.2322474}, {"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 411, in fetch_values\n    return self._pass_call_to_attr(\n", "step": null, "ts": 1651819136.2322474}, {"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 501, in _pass_call_to_attr\n    return getattr(self._get_attribute(), function_name)(**kwargs)\n", "step": null, "ts": 1651819136.2322474}, {"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 102, in _get_attribute\n    raise MissingFieldException(self._path)\n", "step": null, "ts": 1651819136.2322474}, {"value": "", "step": null, "ts": 1651819136.2322474}, {"value": "", "step": null, "ts": 1651819136.2322474}, {"value": "----MissingFieldException-------------------------------------------------------", "step": null, "ts": 1651819136.2322474}]}, "version": 8}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "", "step": null, "ts": 1651819136.2322474}, {"value": "Field \"network_SGD/matrix/val_tp_pr_file\" was not found.", "step": null, "ts": 1651819136.2322474}, {"value": "", "step": null, "ts": 1651819136.2322474}, {"value": "There are two possible reasons:", "step": null, "ts": 1651819136.2322474}, {"value": "    - There is a typo in a path. Double-check your code for typos.", "step": null, "ts": 1651819136.2322474}, {"value": "    - You are fetching a field that other process created, but local representation is not synchronized.", "step": null, "ts": 1651819136.2322474}, {"value": "    If you are sending metadata from multiple processes at the same time, synchronize the local representation before fetching values:", "step": null, "ts": 1651819136.2322474}, {"value": "        run.sync()", "step": null, "ts": 1651819136.2322474}, {"value": "", "step": null, "ts": 1651819136.2322474}, {"value": "Need help?-> https://docs.neptune.ai/getting-started/getting-help", "step": null, "ts": 1651819136.2322474}]}, "version": 9}
{"obj": {"type": "LogStrings", "path": ["monitoring", "traceback"], "values": [{"value": "", "step": null, "ts": 1651819136.2322474}]}, "version": 10}
{"obj": {"type": "AssignBool", "path": ["sys", "failed"], "value": true}, "version": 11}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Traceback (most recent call last):\n", "step": null, "ts": 1651819136.2332473}]}, "version": 12}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\Marc\\Documents\\GitHub\\Artefact-Rejection\\plotting\\max_learnplotter.py\", line 25, in <module>\n", "step": null, "ts": 1651819136.2337477}]}, "version": 13}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1651819136.2342482}]}, "version": 14}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "sgd_tp = run['network_SGD/matrix/val_tp_pr_file'].fetch_values()", "step": null, "ts": 1651819136.2342482}]}, "version": 15}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1651819136.2342482}]}, "version": 16}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 411, in fetch_values\n", "step": null, "ts": 1651819136.2347488}]}, "version": 17}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1651819136.235249}]}, "version": 18}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "return self._pass_call_to_attr(", "step": null, "ts": 1651819136.235249}]}, "version": 19}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1651819136.235249}]}, "version": 20}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 501, in _pass_call_to_attr\n", "step": null, "ts": 1651819136.2357495}]}, "version": 21}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1651819136.2357495}]}, "version": 22}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "return getattr(self._get_attribute(), function_name)(**kwargs)", "step": null, "ts": 1651819136.2362506}]}, "version": 23}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1651819136.2362506}]}, "version": 24}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "  File \"C:\\Users\\Marc\\anaconda3\\envs\\deep\\lib\\site-packages\\neptune\\new\\handler.py\", line 102, in _get_attribute\n", "step": null, "ts": 1651819136.236751}]}, "version": 25}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "    ", "step": null, "ts": 1651819136.2372508}]}, "version": 26}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "raise MissingFieldException(self._path)", "step": null, "ts": 1651819136.2372508}]}, "version": 27}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1651819136.237751}]}, "version": 28}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "neptune.new.exceptions", "step": null, "ts": 1651819136.237751}]}, "version": 29}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": ".", "step": null, "ts": 1651819136.237751}]}, "version": 30}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "MissingFieldException", "step": null, "ts": 1651819136.237751}]}, "version": 31}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": ": ", "step": null, "ts": 1651819136.237751}]}, "version": 32}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n\n----MissingFieldException-------------------------------------------------------\n\nField \"network_SGD/matrix/val_tp_pr_file\" was not found.\n\nThere are two possible reasons:\n    - There is a typo in a path. Double-check your code for typos.\n    - You are fetching a field that other process created, but local representation is not synchronized.\n    If you are sending metadata from multiple processes at the same time, synchronize the local representation before fetching values:\n        run.sync()\n\nNeed help?-> https://docs.neptune.ai/getting-started/getting-help\n", "step": null, "ts": 1651819136.2382517}]}, "version": 33}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "\n", "step": null, "ts": 1651819136.2382517}]}, "version": 34}
{"obj": {"type": "LogStrings", "path": ["monitoring", "stderr"], "values": [{"value": "Waiting for the remaining 34 operations to synchronize with Neptune. Do not kill this process.\n", "step": null, "ts": 1651819136.3399923}]}, "version": 35}
